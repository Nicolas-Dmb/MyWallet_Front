// Mocks generated by Mockito 5.4.5 from annotations
// in mywallet_mobile/test/features/authentification/data/repositories/auth_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mywallet_mobile/core/application/newtwork_info.dart' as _i4;
import 'package:mywallet_mobile/features/authentification/data/data_sources/auth_local_data_source.dart'
    as _i6;
import 'package:mywallet_mobile/features/authentification/data/data_sources/auth_remote_data_source.dart'
    as _i7;
import 'package:mywallet_mobile/features/authentification/data/model/token_model.dart'
    as _i2;
import 'package:mywallet_mobile/features/authentification/data/model/user_model.dart'
    as _i3;
import 'package:mywallet_mobile/features/authentification/domain/entities/user_signup.dart'
    as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeTokenModel_0 extends _i1.SmartFake implements _i2.TokenModel {
  _FakeTokenModel_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUserModel_1 extends _i1.SmartFake implements _i3.UserModel {
  _FakeUserModel_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i4.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<bool> get isConnected =>
      (super.noSuchMethod(
            Invocation.getter(#isConnected),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);
}

/// A class which mocks [AuthLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthLocalDataSource extends _i1.Mock
    implements _i6.AuthLocalDataSource {
  MockAuthLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<void> cacheToken(_i2.TokenModel? token) =>
      (super.noSuchMethod(
            Invocation.method(#cacheToken, [token]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<_i2.TokenModel> getCacheToken() =>
      (super.noSuchMethod(
            Invocation.method(#getCacheToken, []),
            returnValue: _i5.Future<_i2.TokenModel>.value(
              _FakeTokenModel_0(this, Invocation.method(#getCacheToken, [])),
            ),
          )
          as _i5.Future<_i2.TokenModel>);

  @override
  _i5.Future<void> cacheUser(_i3.UserModel? userData) =>
      (super.noSuchMethod(
            Invocation.method(#cacheUser, [userData]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<_i3.UserModel> getCacheUser() =>
      (super.noSuchMethod(
            Invocation.method(#getCacheUser, []),
            returnValue: _i5.Future<_i3.UserModel>.value(
              _FakeUserModel_1(this, Invocation.method(#getCacheUser, [])),
            ),
          )
          as _i5.Future<_i3.UserModel>);
}

/// A class which mocks [AuthRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRemoteDataSource extends _i1.Mock
    implements _i7.AuthRemoteDataSource {
  MockAuthRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i3.UserModel> signup(_i8.UserSignup? userData) =>
      (super.noSuchMethod(
            Invocation.method(#signup, [userData]),
            returnValue: _i5.Future<_i3.UserModel>.value(
              _FakeUserModel_1(this, Invocation.method(#signup, [userData])),
            ),
          )
          as _i5.Future<_i3.UserModel>);

  @override
  _i5.Future<_i2.TokenModel> login(_i8.UserSignup? userData) =>
      (super.noSuchMethod(
            Invocation.method(#login, [userData]),
            returnValue: _i5.Future<_i2.TokenModel>.value(
              _FakeTokenModel_0(this, Invocation.method(#login, [userData])),
            ),
          )
          as _i5.Future<_i2.TokenModel>);

  @override
  _i5.Future<_i2.TokenModel> refreshToken(String? refreshToken) =>
      (super.noSuchMethod(
            Invocation.method(#refreshToken, [refreshToken]),
            returnValue: _i5.Future<_i2.TokenModel>.value(
              _FakeTokenModel_0(
                this,
                Invocation.method(#refreshToken, [refreshToken]),
              ),
            ),
          )
          as _i5.Future<_i2.TokenModel>);

  @override
  _i5.Future<bool> logout(String? accessToken) =>
      (super.noSuchMethod(
            Invocation.method(#logout, [accessToken]),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);
}
